<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSend.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>